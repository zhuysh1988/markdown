apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: ldap
  name: ldap
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: ldap
  template:
    metadata:
      labels:
        app: ldap
    spec:
      containers:
      - env:
        - name: LDAP_LOG_LEVEL
          value: "256"
        - name: {{ .Values.env.ldap.organisation.key }}
          value: {{ .Values.env.ldap.organisation.value }}
        - name: {{ .Values.env.ldap.domain.key }}
          value: {{ .Values.env.ldap.domain.value }}
        - name: {{ .Values.env.ldap.password.admin_passwd.key }}
          value: {{ .Values.env.ldap.password.admin_passwd.value }}
        - name: {{ .Values.env.ldap.password.config_passwd.key }}
          value: {{ .Values.env.ldap.password.config_passwd.value }}
        - name: LDAP_READONLY_USER
          value: "false"
        - name: LDAP_READONLY_USER_USERNAME
          value: readonly
        - name: LDAP_READONLY_USER_PASSWORD
          value: readonly
        - name: LDAP_RFC2307BIS_SCHEMA
          value: "false"
        - name: LDAP_BACKEND
          value: mdb
        - name: LDAP_TLS
          value: "true"
        - name: LDAP_TLS_CRT_FILENAME
          value: ldap.crt
        - name: LDAP_TLS_KEY_FILENAME
          value: ldap.key
        - name: LDAP_TLS_CA_CRT_FILENAME
          value: ca.crt
        - name: LDAP_TLS_ENFORCE
          value: "false"
        - name: LDAP_TLS_CIPHER_SUITE
          value: SECURE256:+SECURE128:-VERS-TLS-ALL:+VERS-TLS1.2:-RSA:-DHE-DSS:-CAMELLIA-128-CBC:-CAMELLIA-256-CBC
        - name: LDAP_TLS_VERIFY_CLIENT
          value: demand
        - name: LDAP_REPLICATION
          value: "false"
        - name: LDAP_REPLICATION_CONFIG_SYNCPROV
          value: binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD
            searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical
        - name: LDAP_REPLICATION_DB_SYNCPROV
          value: binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD
            searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10
            retry="60 +" timeout=1 starttls=critical
        - name: LDAP_REPLICATION_HOSTS
          value: '#PYTHON2BASH:[''ldap://ldap-one-service'', ''ldap://ldap-two-service'']'
        - name: KEEP_EXISTING_CONFIG
          value: "false"
        - name: LDAP_REMOVE_CONFIG_AFTER_SETUP
          value: "true"
        - name: LDAP_SSL_HELPER_PREFIX
          value: ldap
        image: {{ .Values.images.ldap }}
        imagePullPolicy: {{ .Values.images.imagespullpolicy }}
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: {{ .Values.port.ldap }}
          timeoutSeconds: 5
        name: ldap
        ports:
        - containerPort: {{ .Values.port.ldap }}
          hostPort: {{ .Values.port.ldap }}
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: {{ .Values.port.ldap }}
          timeoutSeconds: 5
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/ldap
          name: ldap-data
        - mountPath: /etc/ldap/slapd.d
          name: ldap-config
        - mountPath: /container/service/slapd/assets/certs
          name: ldap-certs
      hostNetwork: true
      dnsPolicy: {{ .Values.dns_policy }}
      nodeSelector:
        {{ .Values.labels.ldap.node_selector_key }}: {{ .Values.labels.ldap.node_selector_value }}
      volumes:
      - hostPath:
          path: {{ .Values.path.ldap.ldap_data }}
        name: ldap-data
      - hostPath:
          path: {{ .Values.path.ldap.ldap_config }}
        name: ldap-config
      - hostPath:
          path: {{ .Values.path.ldap.ldap_certs }}
        name: ldap-certs

